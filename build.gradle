plugins {
    id("java")
    id("org.jetbrains.kotlin.jvm") version "2.1.10"
}

repositories {
    mavenCentral()
}

ext.jacksonVersion = '2.18.2'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.slf4j:slf4j-jdk14:2.0.16"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.1"
    implementation "org.slf4j:slf4j-jdk14:2.0.16"

    implementation platform("org.http4k:http4k-bom:6.0.1.0")
    implementation "org.http4k:http4k-core"
    implementation "org.http4k:http4k-server-undertow"
    implementation "org.http4k:http4k-client-apache"
    implementation "org.http4k:http4k-template-handlebars"

    implementation("dev.forkhandles:result4k:2.20.0.0")

    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"


    implementation 'org.jetbrains.exposed:exposed-core:0.59.0'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.59.0'
    implementation 'org.jetbrains.exposed:exposed-java-time:0.59.0'
    implementation "org.postgresql:postgresql:42.7.5"
    implementation "com.zaxxer:HikariCP:6.2.1"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
    testImplementation 'com.approvaltests:approvaltests:24.17.0'
    testImplementation "org.http4k:http4k-testing-approval"
    testImplementation "org.http4k:http4k-testing-hamkrest"

    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("io.strikt:strikt-core:0.35.1")
}

group = 'com.gildedrose'
version = '0.0.1-SNAPSHOT'

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(21)
    compilerOptions.freeCompilerArgs.add("-Xcontext-receivers")
    testing {
        compilerOptions.freeCompilerArgs.add("-Xcontext-receivers")
    }
}
